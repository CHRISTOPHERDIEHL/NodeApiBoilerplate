import ***REMOVED***
  invokeCallback,
  subscribe,
  FULFILLED,
  REJECTED,
  noop,
  makePromise,
  PROMISE_ID
***REMOVED*** from './-internal';

import ***REMOVED*** asap ***REMOVED*** from './asap';

export default function then(onFulfillment, onRejection) ***REMOVED***
  var parent = this;

  var child = new this.constructor(noop);

  if (child[PROMISE_ID] === undefined) ***REMOVED***
    makePromise(child);
  ***REMOVED***

  var state = parent._state;

  if (state) ***REMOVED***
    var callback = arguments[state - 1];
    asap(function()***REMOVED***
      invokeCallback(state, child, callback, parent._result);
    ***REMOVED***);
  ***REMOVED*** else ***REMOVED***
    subscribe(parent, child, onFulfillment, onRejection);
  ***REMOVED***

  return child;
***REMOVED***
