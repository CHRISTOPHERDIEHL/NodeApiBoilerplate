/*global self*/
import Promise from './promise';

export default function polyfill() ***REMOVED***
  var local;

  if (typeof global !== 'undefined') ***REMOVED***
      local = global;
  ***REMOVED*** else if (typeof self !== 'undefined') ***REMOVED***
      local = self;
  ***REMOVED*** else ***REMOVED***
      try ***REMOVED***
          local = Function('return this')();
      ***REMOVED*** catch (e) ***REMOVED***
          throw new Error('polyfill failed because global object is unavailable in this environment');
      ***REMOVED***
  ***REMOVED***

  var P = local.Promise;

  if (P && Object.prototype.toString.call(P.resolve()) === '[object Promise]' && !P.cast) ***REMOVED***
    return;
  ***REMOVED***

  local.Promise = Promise;
***REMOVED***
