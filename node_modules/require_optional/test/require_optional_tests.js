var assert = require('assert'),
  require_optional = require('../');

describe('Require Optional', function() ***REMOVED***
  describe('top level require', function() ***REMOVED***
    it('should correctly require co library', function() ***REMOVED***
      var promise = require_optional('es6-promise');
      assert.ok(promise);
    ***REMOVED***);

    it('should fail to require es6-promise library', function() ***REMOVED***
      try ***REMOVED***
        require_optional('co');
      ***REMOVED*** catch(e) ***REMOVED***
        assert.equal('OPTIONAL_MODULE_NOT_FOUND', e.code);
        return;
      ***REMOVED***

      assert.ok(false);
    ***REMOVED***);

    it('should ignore optional library not defined', function() ***REMOVED***
      assert.equal(undefined, require_optional('es6-promise2'));
    ***REMOVED***);
  ***REMOVED***);

  describe('internal module file require', function() ***REMOVED***
    it('should correctly require co library', function() ***REMOVED***
      var Long = require_optional('bson/lib/bson/long.js');
      assert.ok(Long);
    ***REMOVED***);
  ***REMOVED***);

  describe('top level resolve', function() ***REMOVED***
    it('should correctly use exists method', function() ***REMOVED***
      assert.equal(false, require_optional.exists('co'));
      assert.equal(true, require_optional.exists('es6-promise'));
      assert.equal(true, require_optional.exists('bson/lib/bson/long.js'));
      assert.equal(false, require_optional.exists('es6-promise2'));
    ***REMOVED***);
  ***REMOVED***);
***REMOVED***);
