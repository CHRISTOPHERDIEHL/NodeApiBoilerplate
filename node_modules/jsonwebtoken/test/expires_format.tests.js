var jwt = require('../index');
var expect = require('chai').expect;

describe('expires option', function() ***REMOVED***

  it('should work with a number of seconds', function () ***REMOVED***
    var token = jwt.sign(***REMOVED***foo: 123***REMOVED***, '123', ***REMOVED*** expiresIn: 10 ***REMOVED***);
    var result = jwt.verify(token, '123');
    expect(result.exp).to.be.closeTo(Math.floor(Date.now() / 1000) + 10, 0.2);
  ***REMOVED***);

  it('should work with a string', function () ***REMOVED***
    var token = jwt.sign(***REMOVED***foo: 123***REMOVED***, '123', ***REMOVED*** expiresIn: '2d' ***REMOVED***);
    var result = jwt.verify(token, '123');
    var two_days_in_secs = 2 * 24 * 60 * 60;
    expect(result.exp).to.be.closeTo(Math.floor(Date.now() / 1000) + two_days_in_secs, 0.2);
  ***REMOVED***);

  it('should work with a string second example', function () ***REMOVED***
    var token = jwt.sign(***REMOVED***foo: 123***REMOVED***, '123', ***REMOVED*** expiresIn: '36h' ***REMOVED***);
    var result = jwt.verify(token, '123');
    var day_and_a_half_in_secs = 1.5 * 24 * 60 * 60;
    expect(result.exp).to.be.closeTo(Math.floor(Date.now() / 1000) + day_and_a_half_in_secs, 0.2);
  ***REMOVED***);


  it('should throw if expires has a bad string format', function () ***REMOVED***
    expect(function () ***REMOVED***
      jwt.sign(***REMOVED***foo: 123***REMOVED***, '123', ***REMOVED*** expiresIn: '1 monkey' ***REMOVED***);
    ***REMOVED***).to.throw(/"expiresIn" should be a number of seconds or string representing a timespan/);
  ***REMOVED***);

  it('should throw if expires is not an string or number', function () ***REMOVED***
    expect(function () ***REMOVED***
      jwt.sign(***REMOVED***foo: 123***REMOVED***, '123', ***REMOVED*** expiresIn: ***REMOVED*** crazy : 213 ***REMOVED*** ***REMOVED***);
    ***REMOVED***).to.throw(/"expiresIn" must be a number/);
  ***REMOVED***);

  it('should throw an error if expiresIn and exp are provided', function () ***REMOVED***
    expect(function () ***REMOVED***
      jwt.sign(***REMOVED*** foo: 123, exp: 839218392183 ***REMOVED***, '123', ***REMOVED*** expiresIn: '5h' ***REMOVED***);
    ***REMOVED***).to.throw(/Bad "options.expiresIn" option the payload already has an "exp" property./);
  ***REMOVED***);


  it('should throw on deprecated expiresInSeconds option', function () ***REMOVED***
    expect(function () ***REMOVED***
      jwt.sign(***REMOVED***foo: 123***REMOVED***, '123', ***REMOVED*** expiresInSeconds: 5 ***REMOVED***);
    ***REMOVED***).to.throw('"expiresInSeconds" is not allowed');
  ***REMOVED***);


***REMOVED***);
