var bCrypt = require("./bCrypt");

var compares = 0;
var salts = [];
var hashes = [];

console.log("\n\n Salts \n");
bCrypt.genSalt(8, saltCallback);
bCrypt.genSalt(10, saltCallback);

function saltCallback(error, result) ***REMOVED***
	if(!error) ***REMOVED***
		console.log(result);
	***REMOVED*** else ***REMOVED***
		console.log(error);
	***REMOVED***
	salts.push(result);
	if(salts.length == 2) ***REMOVED***
		console.log("\n\n Hashes \n");
		createHash(salts[0]);
	***REMOVED***
***REMOVED***

function createHash(salt) ***REMOVED***
	bCrypt.hash("bacon", salt, null, hashCallback);
	bCrypt.hash("bacon", salt, null, hashCallback);
***REMOVED***

function hashCallback(error, result) ***REMOVED***
	if(!error) ***REMOVED***
		console.log(result);
	***REMOVED*** else ***REMOVED***
		console.log(error);
	***REMOVED***
	hashes.push(result);
	if(hashes.length == 2) ***REMOVED***
		createHash(salts[1]);
	***REMOVED*** else if(hashes.length == 4) ***REMOVED***
		console.log("\n\n True Compares \n");
		compares = 0;
		startCompares("bacon", trueCompareCallback);
	***REMOVED***
***REMOVED***

function startCompares(string, callback) ***REMOVED***
	bCrypt.compare(string, hashes[0], callback);
	bCrypt.compare(string, hashes[1], callback);
	bCrypt.compare(string, hashes[2], callback);
	bCrypt.compare(string, hashes[3], callback);
***REMOVED***

function trueCompareCallback(error, result) ***REMOVED***
	if(!error) ***REMOVED***
		console.log(result);
	***REMOVED*** else ***REMOVED***
		console.log(error);
	***REMOVED***
	if(++compares == 4) ***REMOVED***
		console.log("\n\n False Compares \n");
		compares = 0;
		startCompares("veggies", falseCompareCallback);
	***REMOVED***
***REMOVED***

function falseCompareCallback(error, result) ***REMOVED***
	if(!error) ***REMOVED***
		console.log(result);
	***REMOVED*** else ***REMOVED***
		console.log(error);
	***REMOVED***
***REMOVED***