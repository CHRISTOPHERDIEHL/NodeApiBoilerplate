'use strict';

var assert = require('assert');
var timeSafeCompare = require('../../lib/index');

process.on('error', function (e) ***REMOVED***
	console.log('caught: ' + e);
***REMOVED***);

function testEqual(a, b) ***REMOVED***
	assert(timeSafeCompare(a, b));

	// lets also do a parity check with the strict equal to operator
	assert(a === b);
***REMOVED***

function testNotEqual(a, b) ***REMOVED***
	assert(!timeSafeCompare(a, b));

	// lets also do a parity check with the strict not equal to operator
	assert(a !== b);
***REMOVED***

// note: lets also make sure tsscmp can be inline replaced for any types -
// just incase if anyone is interested

// positive tests
testEqual('127e6fbfe24a750e72930c220a8e138275656b8e5d8f48a98c3c92df2caba935',
	'127e6fbfe24a750e72930c220a8e138275656b8e5d8f48a98c3c92df2caba935',
	'test ');
testEqual('a', 'a');
testEqual('', '');
testEqual(undefined, undefined);
testEqual(true, true);
testEqual(false, false);
(function () ***REMOVED***
	var a = ***REMOVED*** a: 1 ***REMOVED***;
	testEqual(a, a);
***REMOVED***)();
(function () ***REMOVED***
	function f1() ***REMOVED*** return 1; ***REMOVED***;
	testEqual(f1, f1);
***REMOVED***)();

// negative tests
testNotEqual('');
testNotEqual('a', 'b');
testNotEqual('a', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa');
testNotEqual('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'a');
testNotEqual('alpha', 'beta');
testNotEqual(false, true);
testNotEqual(false, undefined);
testNotEqual(function () ***REMOVED*** ***REMOVED***, function () ***REMOVED*** ***REMOVED***);
testNotEqual(***REMOVED******REMOVED***, ***REMOVED******REMOVED***);
testNotEqual(***REMOVED*** a: 1 ***REMOVED***, ***REMOVED*** a: 1 ***REMOVED***);
testNotEqual(***REMOVED*** a: 1 ***REMOVED***, ***REMOVED*** a: 2 ***REMOVED***);
testNotEqual([1, 2], [1, 2]);
testNotEqual([1, 2], [1, 2, 3]);
(function () ***REMOVED***
	var a = ***REMOVED*** p: 1 ***REMOVED***;
	var b = ***REMOVED*** p: 1 ***REMOVED***;
	testNotEqual(a, b);
***REMOVED***)();
(function () ***REMOVED***
	function f1() ***REMOVED*** return 1; ***REMOVED***;
	function f2() ***REMOVED*** return 1; ***REMOVED***;
	testNotEqual(f1, f2);
***REMOVED***)();
console.log('Success: all tests complete.');
