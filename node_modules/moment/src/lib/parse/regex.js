export var match1         = /\d/;            //       0 - 9
export var match2         = /\d\d/;          //      00 - 99
export var match3         = /\d***REMOVED***3***REMOVED***/;         //     000 - 999
export var match4         = /\d***REMOVED***4***REMOVED***/;         //    0000 - 9999
export var match6         = /[+-]?\d***REMOVED***6***REMOVED***/;    // -999999 - 999999
export var match1to2      = /\d\d?/;         //       0 - 99
export var match3to4      = /\d\d\d\d?/;     //     999 - 9999
export var match5to6      = /\d\d\d\d\d\d?/; //   99999 - 999999
export var match1to3      = /\d***REMOVED***1,3***REMOVED***/;       //       0 - 999
export var match1to4      = /\d***REMOVED***1,4***REMOVED***/;       //       0 - 9999
export var match1to6      = /[+-]?\d***REMOVED***1,6***REMOVED***/;  // -999999 - 999999

export var matchUnsigned  = /\d+/;           //       0 - inf
export var matchSigned    = /[+-]?\d+/;      //    -inf - inf

export var matchOffset    = /Z|[+-]\d\d:?\d\d/gi; // +00:00 -00:00 +0000 -0000 or Z
export var matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z

export var matchTimestamp = /[+-]?\d+(\.\d***REMOVED***1,3***REMOVED***)?/; // 123456789 123456789.123

// any word (or two) characters or numbers including two/three word month in arabic.
// includes scottish gaelic two word and hyphenated months
export var matchWord = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+)***REMOVED***1,2***REMOVED***/i;


import hasOwnProp from '../utils/has-own-prop';
import isFunction from '../utils/is-function';

var regexes = ***REMOVED******REMOVED***;

export function addRegexToken (token, regex, strictRegex) ***REMOVED***
    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) ***REMOVED***
        return (isStrict && strictRegex) ? strictRegex : regex;
    ***REMOVED***;
***REMOVED***

export function getParseRegexForToken (token, config) ***REMOVED***
    if (!hasOwnProp(regexes, token)) ***REMOVED***
        return new RegExp(unescapeFormat(token));
    ***REMOVED***

    return regexes[token](config._strict, config._locale);
***REMOVED***

// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
function unescapeFormat(s) ***REMOVED***
    return regexEscape(s.replace('\\', '').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) ***REMOVED***
        return p1 || p2 || p3 || p4;
    ***REMOVED***));
***REMOVED***

export function regexEscape(s) ***REMOVED***
    return s.replace(/[-\/\\^$*+?.()|[\]***REMOVED******REMOVED***]/g, '\\$&');
***REMOVED***
