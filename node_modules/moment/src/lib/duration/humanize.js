import ***REMOVED*** createDuration ***REMOVED*** from './create';

var round = Math.round;
var thresholds = ***REMOVED***
    s: 45,  // seconds to minute
    m: 45,  // minutes to hour
    h: 22,  // hours to day
    d: 26,  // days to month
    M: 11   // months to year
***REMOVED***;

// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) ***REMOVED***
    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
***REMOVED***

function relativeTime (posNegDuration, withoutSuffix, locale) ***REMOVED***
    var duration = createDuration(posNegDuration).abs();
    var seconds  = round(duration.as('s'));
    var minutes  = round(duration.as('m'));
    var hours    = round(duration.as('h'));
    var days     = round(duration.as('d'));
    var months   = round(duration.as('M'));
    var years    = round(duration.as('y'));

    var a = seconds < thresholds.s && ['s', seconds]  ||
            minutes <= 1           && ['m']           ||
            minutes < thresholds.m && ['mm', minutes] ||
            hours   <= 1           && ['h']           ||
            hours   < thresholds.h && ['hh', hours]   ||
            days    <= 1           && ['d']           ||
            days    < thresholds.d && ['dd', days]    ||
            months  <= 1           && ['M']           ||
            months  < thresholds.M && ['MM', months]  ||
            years   <= 1           && ['y']           || ['yy', years];

    a[2] = withoutSuffix;
    a[3] = +posNegDuration > 0;
    a[4] = locale;
    return substituteTimeAgo.apply(null, a);
***REMOVED***

// This function allows you to set the rounding function for relative time strings
export function getSetRelativeTimeRounding (roundingFunction) ***REMOVED***
    if (roundingFunction === undefined) ***REMOVED***
        return round;
    ***REMOVED***
    if (typeof(roundingFunction) === 'function') ***REMOVED***
        round = roundingFunction;
        return true;
    ***REMOVED***
    return false;
***REMOVED***

// This function allows you to set a threshold for relative time strings
export function getSetRelativeTimeThreshold (threshold, limit) ***REMOVED***
    if (thresholds[threshold] === undefined) ***REMOVED***
        return false;
    ***REMOVED***
    if (limit === undefined) ***REMOVED***
        return thresholds[threshold];
    ***REMOVED***
    thresholds[threshold] = limit;
    return true;
***REMOVED***

export function humanize (withSuffix) ***REMOVED***
    var locale = this.localeData();
    var output = relativeTime(this, !withSuffix, locale);

    if (withSuffix) ***REMOVED***
        output = locale.pastFuture(+this, output);
    ***REMOVED***

    return locale.postformat(output);
***REMOVED***
