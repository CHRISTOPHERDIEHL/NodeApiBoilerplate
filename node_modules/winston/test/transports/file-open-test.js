/*
 * file-open-test.js: Tests for File transport "open" event
 *
 * (C) 2014 William Wong
 * MIT LICENSE
 *
 */

var assert = require('assert'),
    fs = require('fs'),
    os  = require('os'),
    path = require('path'),
    vows = require('vows'),
    winston = require('../../lib/winston');

vows.describe('winston/transports/file').addBatch(***REMOVED***
    'An instance of the File Transport': ***REMOVED***
        topic: function () ***REMOVED***
            var callback = this.callback.bind(this),
                logPath = path.resolve(__dirname, '../fixtures/logs/file-open-test.log');

            try ***REMOVED***
                fs.unlinkSync(logPath);
            ***REMOVED*** catch (ex) ***REMOVED***
                if (ex && ex.code !== 'ENOENT') ***REMOVED*** return callback(ex); ***REMOVED***
            ***REMOVED***

            var fileTransport = new (winston.transports.File)(***REMOVED***
                    filename: logPath
                ***REMOVED***),
                logger = new (winston.Logger)(***REMOVED***
                    transports: [fileTransport]
                ***REMOVED***),
                timeline = ***REMOVED******REMOVED***;

            fileTransport.open(function () ***REMOVED***
                timeline.open = Date.now();

                setTimeout(function () ***REMOVED***
                    logger.info('Hello, World!', function () ***REMOVED***
                        timeline.logged = Date.now();
                    ***REMOVED***);
                ***REMOVED***, 100);

                setTimeout(function () ***REMOVED***
                    callback(null, timeline);
                ***REMOVED***, 1000);
            ***REMOVED***);
        ***REMOVED***,
        'should fire "open" event': function (results) ***REMOVED***
            assert.isTrue(!!results.open);
        ***REMOVED***,
        'should fire "logged" event': function (results) ***REMOVED***
            assert.isTrue(!!results.logged);
        ***REMOVED***
    ***REMOVED***
***REMOVED***).export(module);