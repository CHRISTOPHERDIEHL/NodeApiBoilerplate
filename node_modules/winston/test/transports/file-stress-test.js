/*
 * file-stress-test.js: Tests for stressing File transport
 *
 * (C) 2014 William Wong
 * MIT LICENSE
 *
 */

var assert = require('assert'),
    fs = require('fs'),
    os  = require('os'),
    path = require('path'),
    vows = require('vows'),
    winston = require('../../lib/winston');

vows.describe('winston/transports/file').addBatch(***REMOVED***
    'A stressed instance of the File Transport': ***REMOVED***
        topic: function () ***REMOVED***
            var callback = this.callback.bind(this),
                logPath = path.resolve(__dirname, '../fixtures/logs/file-stress-test.log');

            try ***REMOVED***
                fs.unlinkSync(logPath);
            ***REMOVED*** catch (ex) ***REMOVED***
                if (ex && ex.code !== 'ENOENT') ***REMOVED*** return callback(ex); ***REMOVED***
            ***REMOVED***

            var fileTransport = new (winston.transports.File)(***REMOVED***
                    filename: logPath
                ***REMOVED***),
                logger = new (winston.Logger)(***REMOVED***
                    transports: [fileTransport]
                ***REMOVED***);

            fileTransport.on('open', function () ***REMOVED***
                setTimeout(function () ***REMOVED***
                    clearInterval(interval);

                    logger.query(***REMOVED*** order: 'asc' ***REMOVED***, function (err, results) ***REMOVED***
                        callback(null, results);
                    ***REMOVED***);
                ***REMOVED***, 100);
            ***REMOVED***);

            var logIndex = 0,
                interval = setInterval(function () ***REMOVED***
                    logger.info(++logIndex);
                    stress(200);
                ***REMOVED***, 0);

            logger.info(++logIndex);
            stress(200);

            function stress(duration) ***REMOVED***
                var startTime = Date.now();

                while (Date.now() - startTime < duration) ***REMOVED***
                    Math.sqrt(Math.PI);
                ***REMOVED***
            ***REMOVED***
        ***REMOVED***,
        'should not skip any log lines': function (results) ***REMOVED***
            var testIndex = 0;

            results.file.forEach(function (log) ***REMOVED***
                if (+log.message !== ++testIndex) ***REMOVED***
                    throw new Error('Number skipped');
                ***REMOVED***
            ***REMOVED***);
        ***REMOVED***
    ***REMOVED***
***REMOVED***).export(module);
