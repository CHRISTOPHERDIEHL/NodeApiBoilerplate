"use strict";
module.exports =
    function(Promise, PromiseArray) ***REMOVED***
var PromiseInspection = Promise.PromiseInspection;
var util = require("./util.js");

function SettledPromiseArray(values) ***REMOVED***
    this.constructor$(values);
***REMOVED***
util.inherits(SettledPromiseArray, PromiseArray);

SettledPromiseArray.prototype._promiseResolved = function (index, inspection) ***REMOVED***
    this._values[index] = inspection;
    var totalResolved = ++this._totalResolved;
    if (totalResolved >= this._length) ***REMOVED***
        this._resolve(this._values);
    ***REMOVED***
***REMOVED***;

SettledPromiseArray.prototype._promiseFulfilled = function (value, index) ***REMOVED***
    var ret = new PromiseInspection();
    ret._bitField = 268435456;
    ret._settledValue = value;
    this._promiseResolved(index, ret);
***REMOVED***;
SettledPromiseArray.prototype._promiseRejected = function (reason, index) ***REMOVED***
    var ret = new PromiseInspection();
    ret._bitField = 134217728;
    ret._settledValue = reason;
    this._promiseResolved(index, ret);
***REMOVED***;

Promise.settle = function (promises) ***REMOVED***
    return new SettledPromiseArray(promises).promise();
***REMOVED***;

Promise.prototype.settle = function () ***REMOVED***
    return new SettledPromiseArray(this).promise();
***REMOVED***;
***REMOVED***;
