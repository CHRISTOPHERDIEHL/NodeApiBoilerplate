"use strict";
module.exports = function(
    Promise, INTERNAL, tryConvertToPromise, apiRejection) ***REMOVED***
var isArray = require("./util.js").isArray;

var raceLater = function (promise) ***REMOVED***
    return promise.then(function(array) ***REMOVED***
        return race(array, promise);
    ***REMOVED***);
***REMOVED***;

function race(promises, parent) ***REMOVED***
    var maybePromise = tryConvertToPromise(promises);

    if (maybePromise instanceof Promise) ***REMOVED***
        return raceLater(maybePromise);
    ***REMOVED*** else if (!isArray(promises)) ***REMOVED***
        return apiRejection("expecting an array, a promise or a thenable\u000a\u000a    See http://goo.gl/s8MMhc\u000a");
    ***REMOVED***

    var ret = new Promise(INTERNAL);
    if (parent !== undefined) ***REMOVED***
        ret._propagateFrom(parent, 4 | 1);
    ***REMOVED***
    var fulfill = ret._fulfill;
    var reject = ret._reject;
    for (var i = 0, len = promises.length; i < len; ++i) ***REMOVED***
        var val = promises[i];

        if (val === undefined && !(i in promises)) ***REMOVED***
            continue;
        ***REMOVED***

        Promise.cast(val)._then(fulfill, reject, undefined, ret, null);
    ***REMOVED***
    return ret;
***REMOVED***

Promise.race = function (promises) ***REMOVED***
    return race(promises, undefined);
***REMOVED***;

Promise.prototype.race = function () ***REMOVED***
    return race(this, undefined);
***REMOVED***;

***REMOVED***;
