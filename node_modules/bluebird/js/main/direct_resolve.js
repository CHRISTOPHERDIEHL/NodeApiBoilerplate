"use strict";
var util = require("./util.js");
var isPrimitive = util.isPrimitive;

module.exports = function(Promise) ***REMOVED***
var returner = function () ***REMOVED***
    return this;
***REMOVED***;
var thrower = function () ***REMOVED***
    throw this;
***REMOVED***;
var returnUndefined = function() ***REMOVED******REMOVED***;
var throwUndefined = function() ***REMOVED***
    throw undefined;
***REMOVED***;

var wrapper = function (value, action) ***REMOVED***
    if (action === 1) ***REMOVED***
        return function () ***REMOVED***
            throw value;
        ***REMOVED***;
    ***REMOVED*** else if (action === 2) ***REMOVED***
        return function () ***REMOVED***
            return value;
        ***REMOVED***;
    ***REMOVED***
***REMOVED***;


Promise.prototype["return"] =
Promise.prototype.thenReturn = function (value) ***REMOVED***
    if (value === undefined) return this.then(returnUndefined);

    if (isPrimitive(value)) ***REMOVED***
        return this._then(
            wrapper(value, 2),
            undefined,
            undefined,
            undefined,
            undefined
       );
    ***REMOVED*** else if (value instanceof Promise) ***REMOVED***
        value._ignoreRejections();
    ***REMOVED***
    return this._then(returner, undefined, undefined, value, undefined);
***REMOVED***;

Promise.prototype["throw"] =
Promise.prototype.thenThrow = function (reason) ***REMOVED***
    if (reason === undefined) return this.then(throwUndefined);

    if (isPrimitive(reason)) ***REMOVED***
        return this._then(
            wrapper(reason, 1),
            undefined,
            undefined,
            undefined,
            undefined
       );
    ***REMOVED***
    return this._then(thrower, undefined, undefined, reason, undefined);
***REMOVED***;
***REMOVED***;
